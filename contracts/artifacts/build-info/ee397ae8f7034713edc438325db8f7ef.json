{
	"id": "ee397ae8f7034713edc438325db8f7ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/walletrecursivecontract/IErrorHandler.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\ninterface IErrorHandler {\n\n    error InvalidAddress(address sentAddress, string errorMsg);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/walletrecursivecontract/IErrorHandler.sol": {
				"IErrorHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sentAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "errorMsg",
									"type": "string"
								}
							],
							"name": "InvalidAddress",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sentAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"errorMsg\",\"type\":\"string\"}],\"name\":\"InvalidAddress\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/walletrecursivecontract/IErrorHandler.sol\":\"IErrorHandler\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/walletrecursivecontract/IErrorHandler.sol\":{\"keccak256\":\"0x9b73a4c7e55e7bfd279835a3b8b411d7c6f4174aee4fde03e3d6d6acd26c1917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ff8bb26643bd0827ba4d100557fa94fb2acb4fb784e40c782938abd79edccc\",\"dweb:/ipfs/QmZHEHLjHJWLzyX4PHF8AxvkM6pnHMJuzUER37QFG7AQn4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/walletrecursivecontract/IErrorHandler.sol": {
				"ast": {
					"absolutePath": "contracts/walletrecursivecontract/IErrorHandler.sol",
					"exportedSymbols": {
						"IErrorHandler": [
							8
						]
					},
					"id": 9,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IErrorHandler",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "IErrorHandler",
							"nameLocation": "67:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f7693c3d",
									"id": 7,
									"name": "InvalidAddress",
									"nameLocation": "94:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "sentAddress",
												"nameLocation": "117:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "109:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "errorMsg",
												"nameLocation": "137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "130:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:38:0"
									},
									"src": "88:59:0"
								}
							],
							"scope": 9,
							"src": "57:92:0",
							"usedErrors": [
								7
							],
							"usedEvents": []
						}
					],
					"src": "32:117:0"
				},
				"id": 0
			}
		}
	}
}